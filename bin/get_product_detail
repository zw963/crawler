#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

def capture(file)
  logger.info "正在打开 #{$keyword} #{category}页面."

  list = CSV.read(file).each do |csv_array|
    id = csv_array[0]
    name = csv_array[1]
    detail_url = csv_array[2]

    product_detail_filename = "#{home_directory}/#{site}/#{$keyword}/#{name}/details.json"
    image_pages_url_filename = "#{home_directory}/#{site}/#{$keyword}/#{name}/images_page_url"

    if test 's', product_detail_filename
      logger_with_puts "跳过 #{name} #{category}页面抓取 !"
      next
    end

    case site
    when '京东'
      content = Nokogiri::HTML(open(detail_url))
    when '天猫'
      browser.reset!
      browser.goto detail_url
      content = Nokogiri::HTML(browser.html)
    end

    begin
      logger.info "创建 #{product_detail_filename}"
      product_detail_file = File.open(product_detail_filename, "wb")

      details = content.css(product_detail_css)
      details_hash = Hash[details.map {|e| e.text.split(/：|:/) }.select {|x| x.size == 2 }].to_json rescue "{}"

      # specs 只有京东才有.
      specs = content.css('div#product-detail-2 table.Ptable tr')
      specs_hash = Hash[specification[2..-1].map {|e| [e.children[0].text, e.children[1].text] }].to_json rescue "{}"
      product_detail_file.puts "{\"#{id}\": {\"details\": #{details_hash}, \"specification\": #{specs_hash}}}"
      logger_with_puts "#{label(name)} 抓取完成."
    ensure
      logger.info "正在关闭 #{product_detail_file.path}"
      product_detail_file.close
    end

    begin
      logger.info "创建 #{image_pages_url_filename}"
      images_page_url_file = File.open(image_pages_url_filename, "wb")

      image_detail_element = content.css(image_page_css)

      image_pages_url =
        if image_detail_element.search('./@href').empty?
          image_detail_element.attr('onclick').text[/'(.*?)'/, 1]
        else
          image_detail_element.attr('href').text
        end

      images_page_url_file.puts image_pages_url
    ensure
      logger.info "正在关闭 #{images_page_url_file.path}"
      images_page_url_file.close
    end
  end
end

unless ARGV.empty?
  logger_with_puts "必须首先使用 \033[0;33m./get_product_list\033[0m 生成抓取列表."
  exit 1
end

require_relative '../lib/common'
include Common

begin
  Dir["#{home_directory}/#{site}/*.csv"].each do |file|
    $keyword = File.basename(file, '.csv')
    load_site_info

    capture(file)
  end
ensure
  browser.close unless @browser.nil?
end
