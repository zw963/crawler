#!/usr/bin/env ruby

unless ARGV.empty?
  logger_with_puts logger_with_puts "必须首先使用 \033[0;33m./get_jd_product_list\033[0m 生成抓取列表."
  exit 1
end

require_relative '../lib/common'
include Common

begin
  directory = "#{home_directory}/#{site}"
  product_details_json = "#{directory}/product_details.json"
  puts "创建 #{product_details_json}"
  product_details_json_file = File.open(product_details_json, "wb")
  product_details_json_file.puts "{\n"

  Dir["#{home_directory}/#{site}/**/product_details.html"].each do |filename|
    file = File.open(filename)
    $keyword = File.basename(File.expand_path("../../../", filename))
    name = File.basename(File.expand_path("../", filename))
    product_origin_url = file.readline.chomp
    load_site_info

    content = Nokogiri.HTML(File.read(file))
    # 产品详细信息.
    id = File.read(File.expand_path("../id", filename)).chomp
    price = content.css(product_page_price_css).first.text.tr('[¥$]', '')
    average_price = content.css(product_page_average_price_css).first.text
    details_hash = Hash[content.css(product_page_detail_list_css).map {|e| e.text.split(/：|:/) }.select {|x| x.size == 2 }] rescue {}
    # 产品规格(specification), 目前仅仅支持京东.
    specs = content.css('div#product-detail-2 table.Ptable tr')
    specs_hash = Hash[specification[2..-1].map {|e| [e.children[0].text, e.children[1].text] }] rescue {}
    # 产品的大图 url.
    images_url_ary =
      content.search("
//div[contains(@id, \"#{product_page_float_image_id}\")]/img
|
//div[contains(@class, \"#{product_page_float_image_id}\")]/img
").map {|x| x.attr('src') }
    local_images_url_ary = images_url_ary.map {|f| "#{directory}/#{$keyword}/#{name}/#{File.basename(f)}" }

    details_hash.merge!(specs_hash).merge!({
        '商品名称' => name,
        '价格' => price,
        '平均价格' => average_price,
        '商品原始链接' => product_origin_url,
        '图片原始链接' => images_url_ary,
        '图片本地链接' => local_images_url_ary
      })

    product_details_json_file.puts %("#{id}": #{details_hash.to_json},)
  end
  logger_with_puts "抓取产品详细信息完成."
ensure
  product_details_json_file.puts "\"null\":null\n}"
  product_details_json_file.close unless product_details_json_file.nil?
  browser.close unless @browser.nil?
end
