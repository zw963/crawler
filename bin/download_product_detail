#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

def capture(file)
  logger.info "正在打开 #{keyword} #{category}页面."

  amount_ary = CSV.readlines(file)
  amount = amount_ary.count
  amount_counter = 0

  list = amount_ary.each do |csv_array|
    name = csv_array[1]
    detail_url = csv_array[2]
    directory = "#{keyword_directory}/#{name}"
    product_details_filename = "#{directory}/product_details.html"

    if test ?s, product_details_filename
      logger_with_puts "跳过 \033[0;33m#{name}\033[0m !"
      next
    end

    logger_with_puts "正在抓取 #{amount_counter += 1}/#{amount}"

    begin
      product_details_file = File.open(product_details_filename, 'wb')

      contents = []
      browser.goto detail_url
      counter = 0

      begin
        browser.instance_eval(product_page_little_image_lists_expression).each do |li|
          li.hover
          browser.instance_eval(product_page_image_expression).when_dom_changed(timeout: 2) do |dom|
            dom.hover
            tries = 0
            begin
              tries += 1
              Watir::Wait.until(5) { browser.html.include? product_page_float_image_id }
              counter += 1
              logger_with_puts "成功提取 \033[0;33m#{name}\033[0m 第 #{counter} 张图片."
            rescue Net::ReadTimeout, Watir::Wait::TimeoutError
              if tries <= 2
                logger_with_puts $!.message+", 重试第 #{tries} 次", :error
                retry
              else
                logger_with_puts "获取大图失败. 查看 #{detail_url} 了解详细信息.", :error
                next
              end
            ensure
              contents << browser.html
            end
          end
        end
      rescue Net::ReadTimeout, Watir::Wait::TimeoutError
        logger_with_puts $!.message, :error
        retry
      end

      product_details_file.puts detail_url
      product_details_file.puts contents
      logger_with_puts "保存产品细节信息到 #{product_details_filename}."
    ensure
      product_details_file.close unless product_details_file.nil?
    end
  end
  logger_with_puts "提取 \033[0;33m#{keyword}\033[0m #{category}#{task} 完成."
end

unless ARGV.empty?
  logger_with_puts "必须首先使用 \033[0;33m./get_product_list\033[0m 生成抓取列表."
  exit 1
end

require_relative '../lib/common'
include Common

begin
  Thread.current['keyword'] = ENV['CRAWLER_KEYWORD']
  Thread.current['keyword_directory'] = ENV['CRAWLER_KEYWORD_DIRECTORY']

  load_site_info

  csv = "#{keyword_directory}.csv"

  unless test ?s, csv
    logger_with_puts "#{csv} 不存在! 跳过产品细节提取."
    exit 1
  end

  capture("#{keyword_directory}.csv")
ensure
  browser.close unless @browser.nil?
end
